name: Gemini Assistant

on:
  repository_dispatch:
    types: [assistant]
  issue_comment:
    types: [created]

jobs:
  respond:
    if: |
      github.event_name == 'repository_dispatch' ||
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@gemini-cli'))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract question
        id: question
        run: |
          if [ "${{ github.event_name }}" == "repository_dispatch" ]; then
            COMMENT_ID="${{ github.event.client_payload.comment_id }}"
            ISSUE_NUMBER="${{ github.event.client_payload.issue_number }}"
          else
            COMMENT="${{ github.event.comment.body }}"
            ISSUE_NUMBER="${{ github.event.issue.number }}"
          fi
          echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT
          
      - name: Get PR context
        id: pr_context
        run: |
          # Get the comment body
          COMMENT="${{ github.event.comment.body }}"
          # Remove @gemini-cli prefix and extract the question
          QUESTION=$(echo "$COMMENT" | sed 's/@gemini-cli//g' | xargs)
          echo "question=$QUESTION" >> $GITHUB_OUTPUT

      - name: Run Gemini CLI
        uses: google-github-actions/run-gemini-cli@v0.1.13
        with:
          gemini_api_key: ${{ secrets.GEMINI_API_KEY }}
          gemini_model: 'gemini-2.0-flash'
          prompt: |
            You are a helpful Terraform and GCP expert assistant.
            
            Context: This is a Terraform project for managing Google Cloud Storage buckets.
            
            User question: ${{ steps.pr_context.outputs.question }}
            
            Please provide a clear, helpful, and technically accurate answer.
            Include code examples if relevant.

      - name: Comment response
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const geminiOutput = process.env.GEMINI_OUTPUT || 'The AI assistant is processing your request...';
            
            github.rest.issues.createComment({
              issue_number: ${{ steps.question.outputs.issue_number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ðŸ¤– Gemini Assistant Response\n\n${geminiOutput}\n\n---\n*Powered by Gemini AI*`
            });

