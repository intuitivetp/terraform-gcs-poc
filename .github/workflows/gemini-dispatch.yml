name: Gemini Assistant

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]

jobs:
  respond:
    if: contains(github.event.comment.body, '@gemini-cli')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract question
        id: question
        run: |
          COMMENT="${{ github.event.comment.body }}"
          # Remove @gemini-cli and any command prefix
          QUESTION=$(echo "$COMMENT" | sed 's/@gemini-cli//g' | sed 's/\/[a-z-]*//g' | xargs)
          echo "question=$QUESTION" >> $GITHUB_OUTPUT
          echo "issue_number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT

      - name: Run Gemini CLI
        id: gemini
        uses: google-github-actions/run-gemini-cli@v0.1.13
        with:
          gemini_api_key: ${{ secrets.GEMINI_API_KEY }}
          gemini_model: 'gemini-2.0-flash'
          prompt: |
            You are a helpful Terraform and GCP expert assistant.
            
            Context: This is a Terraform project for managing Google Cloud Storage buckets.
            Review the codebase in the current directory if needed.
            
            User question: ${{ steps.question.outputs.question }}
            
            Please provide a clear, helpful, and technically accurate answer.
            Include code examples if relevant.

      - name: Comment response
        uses: actions/github-script@v7
        with:
          script: |
            const geminiOutput = process.env.GEMINI_OUTPUT || 'Processing your request...';
            
            github.rest.issues.createComment({
              issue_number: ${{ steps.question.outputs.issue_number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ðŸ¤– Gemini Assistant Response\n\n**Question:** ${{ steps.question.outputs.question }}\n\n**Answer:**\n\n${geminiOutput}\n\n---\n*Powered by Gemini AI*`
            });
